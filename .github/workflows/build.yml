---
name: Build

on:
  workflow_call:
  push:
    branches:
      - "master"
      - "develop"

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            runner: ubuntu-24.04
          - os: linux
            arch: arm64
            runner: ubuntu-24.04-arm
          # - os: macosx
          #   arch: arm64
          #   runner: macos-latest
          # - os: windows
          #   arch: x64
          #   runner: windows-latest
          #?   ext: '.exe'

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Run linter
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          only-new-issues: true

      - name: Run tests with coverage
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} \
            go test -v -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        if: matrix.os == 'linux' && matrix.arch == 'amd64'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

      - name: Run security scan
        if: matrix.os == 'linux' && matrix.arch == 'amd64'
        uses: securecodewarrior/github-action-gosec@v1
        with:
          args: '-fmt sarif -out gosec.sarif ./...'

      - name: Build binary
        run: |
          [ -d build ] || mkdir -p build
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go \
            build -v -ldflags "-X main.version=${{ github.run_number }}" \
            -o build/fetch-k8s-cert${{ matrix.ext }}
