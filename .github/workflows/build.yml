---
name: Build

on:
  workflow_call:
  push:
    branches:
      - "master"
      - "develop"

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            runner: ubuntu-24.04
          - os: linux
            arch: arm64
            runner: ubuntu-24.04-arm
          # - os: macosx
          #   arch: arm64
          #   runner: macos-latest
          # - os: windows
          #   arch: x64
          #   runner: windows-latest
          #?   ext: '.exe'

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Run tests
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} \
            go test -v

      - name: Build binary
        run: |
          [ -d build ] || mkdir -p build
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go \
            build -v -ldflags "-X main.version=${{ github.run_number }}" \
            -o build/fetch-k8s-cert${{ matrix.ext }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: rossigee/fetch-k8s-cert:${{ github.run_number }}