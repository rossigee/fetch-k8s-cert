name: Build

on:
  workflow_call:
  push:
    branches:
      - 'master'
      - 'develop'

jobs:
  build:
    strategy:
      matrix:
        go_version:
          - 1.20
        arch:
          - amd64
          - arm64

    runs-on: ubuntu-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version-file: 'go.mod'

    - name: Build for ${{ matrix.arch }}
      run: GOARCH=${{ matrix.arch }} go build -v -o fetch-k8s-cert

    - name: Run test
      if: matrix.arch == 'amd64' # Until we can test on other archs
      run: GOARCH=${{ matrix.arch }} go test -v

    - name: Determine packaging version number
      id: pkgversion
      run: |
        version_line=$(head -n 1 "debian/changelog")
        if [[ "$version_line" =~ ([0-9]+\.[0-9]+\-[0-9]+) ]]; then
          echo "::set-output name=version::${BASH_REMATCH[1]}"
        else
          echo "::set-output name=version::0.0-1"
        fi

    - name: Package release for Ubuntu
      if: startsWith(github.ref, 'refs/tags/v')
      uses: jiro4989/build-deb-action@v3
      with:
        package: fetch-k8s-script
        maintainer: Ross Golder
        version: '${{ steps.pkgversion.outputs.version }}'
        arch: '${{ matrix.arch }}'
        depends: 'libc6 (>= 2.2.1)'
        desc: 'App to retrieve TLS certificate from K8S cluster.'
